Rocket.Surgery.Extensions.Metrics.MetricsBuilder
Rocket.Surgery.Extensions.Metrics.MetricsBuilder.AppMetricsBuilder.get -> App.Metrics.IMetricsBuilder
Rocket.Surgery.Extensions.Metrics.MetricsBuilder.Build() -> void
Rocket.Surgery.Extensions.Metrics.MetricsBuilder.Configuration.get -> Microsoft.Extensions.Configuration.IConfiguration
Rocket.Surgery.Extensions.Metrics.MetricsBuilder.Environment.get -> Rocket.Surgery.Conventions.IRocketEnvironment
Rocket.Surgery.Extensions.Metrics.MetricsBuilder.Logger.get -> Microsoft.Extensions.Logging.ILogger
Rocket.Surgery.Extensions.Metrics.MetricsBuilder.MetricsBuilder(Rocket.Surgery.Conventions.Scanners.IConventionScanner scanner, Rocket.Surgery.Conventions.Reflection.IAssemblyProvider assemblyProvider, Rocket.Surgery.Conventions.Reflection.IAssemblyCandidateFinder assemblyCandidateFinder, App.Metrics.IMetricsBuilder appMetricsBuilder, Rocket.Surgery.Conventions.IRocketEnvironment environment, Microsoft.Extensions.Configuration.IConfiguration configuration, Microsoft.Extensions.Logging.ILogger diagnosticSource, System.Collections.Generic.IDictionary<object, object> properties) -> void
Rocket.Surgery.Extensions.Metrics.RocketMetricsOptions
Rocket.Surgery.Extensions.Metrics.RocketMetricsOptions.RocketMetricsOptions() -> void
Rocket.Surgery.Extensions.Metrics.RocketMetricsOptions.UseDefaults.get -> bool
Rocket.Surgery.Extensions.Metrics.RocketMetricsOptions.UseDefaults.set -> void